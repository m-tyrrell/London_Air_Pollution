# Focusing on the first cluster
plot(hc_sbd, type = "series", clus = 3)
# Focusing on the first cluster
plot(hc_sbd, type = "series", clus = 4)
# Focusing on the first cluster
plot(hc_sbd, type = "series", clus = 5)
# Focusing on the first cluster
plot(hc_sbd, type = "series", clus = 6)
# Focusing on the first cluster
plot(hc_sbd, type = "series", clus = 7)
# Focusing on the first cluster
plot(hc_sbd, type = "series", clus = 8)
# Focusing on the first cluster
plot(hc_sbd, type = "series", clus = 9)
# Focusing on the first cluster
plot(hc_sbd, type = "series", clus = 10)
###
require("cluster")
tsclust(CharTraj[1L:20L], type = "h", k = 4L,
distance = "dtw_basic",
control = hierarchical_control(method = diana),
args = tsclust_args(dist = list(window.size = 18L)))
# Reinterpolate to same length
data <- reinterpolate(CharTraj, new.length = max(lengths(CharTraj)))
# z-normalization
data <- zscore(data[60L:100L])
pc_dtw <- tsclust(data, k = 4L,
distance = "dtw_basic", centroid = "dba",
trace = TRUE, seed = 8,
norm = "L2", window.size = 20L,
args = tsclust_args(cent = list(trace = TRUE)))
pc_dtwlb <- tsclust(data, k = 4L,
distance = "dtw_lb", centroid = "dba",
trace = TRUE, seed = 8,
norm = "L2", window.size = 20L,
control = partitional_control(pam.precompute = FALSE),
args = tsclust_args(cent = list(trace = TRUE)))
pc_ks <- tsclust(data, k = 4L,
distance = "sbd", centroid = "shape",
seed = 8, trace = TRUE)
pc_tp <- tsclust(data, k = 4L, type = "t",
seed = 8, trace = TRUE,
control = tadpole_control(dc = 1.5,
window.size = 20L))
sapply(list(DTW = pc_dtw, DTW_LB = pc_dtwlb, kShape = pc_ks, TADPole = pc_tp),
cvi, b = CharTrajLabels[60L:100L], type = "VI")
plot(pc_dtw)
plot(pc_dtwlb)
plot(pc_ks)
plot(pc_tp)
plot(pc_ks)
pc_ks@clusinfo
pc_ks@clusinfo
pc_ks@cldist
View(pc_ks)
View(pc_dtwlb)
View(pc_dtw)
View(pc_tp)
# Remove recalcitrant R object
rm(titanic_train)
# Load project
library('ProjectTemplate')
setwd('Desktop/DS_Projects/DK_GST_MAY2019')
load.project()
ldn1 = readOGR(dsn = "data/LSOA Geographies - shapefile", layer = "LSOA Geographies")
library(rgeos)
library(rgdal)
library(sp)
library(dplyr)
library(ggplot2)
library(reshape2)
ldn1 = readOGR(dsn = "data/LSOA Geographies - shapefile", layer = "LSOA Geographies")
proj4string(ldn1) <- CRS("+init=epsg:27700")
ldn1.wgs84 <- spTransform(ldn1, CRS("+init=epsg:4326"))
ldn2 = readOGR(dsn = "data/LSOA Geographies.shp", layer = )
map1 <- ggplot(ldn1.wgs84) +
geom_polygon(aes(x = long, y = lat, group = group), fill = "white", colour = "black")
map1 + labs(x = "Longitude", y = "Latitude", title = "Map of Greater London with the borough boundaries")
emmissions = read.csv("data/Emission Sources")
emmissions = read.csv("data/Emission Sources.csv")
View(emmissions)
pollution = read.csv("data/Pollution Health and Sociodemographic data.csv")
View(pollution)
test = emmissions %>%
select(LSOA11CD, NOx.Emissions.tpa)
map1 + geom_point(data = crimesNoArea, aes(x = Longitude, y = Latitude, colour = Crime.type)) +
scale_colour_manual(values = rainbow(14)) +
labs(x = "Longitude", y = "Latitude", title = "Map of Southwark/Lambeth LSOA")
map1 + geom_point(data = crimesNoArea, aes(x = Longitude, y = Latitude, colour = Crime.type)) +
scale_colour_manual(values = rainbow(14)) +
labs(x = "Longitude", y = "Latitude", title = "Map of Southwark/Lambeth LSOA")
map1 + labs(x = "Longitude", y = "Latitude", title = "Map of Southwark/Lambeth LSO")
map1 + labs(x = "Longitude", y = "Latitude", title = "Map of Southwark/Lambeth LSOA")
rm(titanic_train)
library('ProjectTemplate')
setwd('Desktop/DS_Projects/DK_GST_MAY2019')
load.project()
View(pollution)
col.names(pollutions)
names(pollutions)
names(pollution)
fil = c("Population.aged.0.15","Population.aged.65.","Population.density..persons.per.hectare.",
"Change.in.population.2001.to.2017","Christian","People.with.no.religious.belief","Muslim",
"White.ethnic.groups","Black.ethnic.groups","Asian.ethnic.groups","Born.in.EU.Accession.countries",
"Born.in.non.European.countries","Main.language.is.English","Economically.inactive",
"People.with.no.qualifications","Overcrowded.housing","Index.of.Multiple.Deprivation..IMD..Score",
"Net.annual.household.income.estimate")
poll = pollution %>%
filter(fil)
poll = pollution[,fil]
View(poll)
fil = c("Population.aged.0.15","Population.aged.65.","Population.density..persons.per.hectare.",
"Change.in.population.2001.to.2017","Christian","People.with.no.religious.belief","Muslim",
"White.ethnic.groups","Black.ethnic.groups","Asian.ethnic.groups","Born.in.EU.Accession.countries",
"Born.in.non.European.countries","Main.language.is.English","Economically.inactive",
"People.with.no.qualifications","Overcrowded.housing","Index.of.Multiple.Deprivation..IMD..Score",
"Households.in.poverty","Net.annual.household.income.estimate.after.housing.costs",
"Youth.unemployment..18.24.receiving.JSA.or.Universal.Credit.","Unemployment.benefit..JSA.and.Universal.Credit.",
"Children..dependent.children.aged.under.20..in.families.in.receipt.of.IS.JSA.or.whose.income.is..60..of.median.income"
)
poll = pollution[,fil]
write.csv(fil, file = "pollution_filtered.csv")
View(poll)
write.csv(poll, file = "pollution_filtered.csv")
fil = c("NOx","PM10","PM2.5",
"Population.aged.0.15","Population.aged.65.","Population.density..persons.per.hectare.",
"Change.in.population.2001.to.2017","Christian","People.with.no.religious.belief","Muslim",
"White.ethnic.groups","Black.ethnic.groups","Asian.ethnic.groups","Born.in.EU.Accession.countries",
"Born.in.non.European.countries","Main.language.is.English","Economically.inactive",
"People.with.no.qualifications","Overcrowded.housing","Index.of.Multiple.Deprivation..IMD..Score",
"Households.in.poverty","Net.annual.household.income.estimate.after.housing.costs",
"Youth.unemployment..18.24.receiving.JSA.or.Universal.Credit.","Unemployment.benefit..JSA.and.Universal.Credit.",
"Children..dependent.children.aged.under.20..in.families.in.receipt.of.IS.JSA.or.whose.income.is..60..of.median.income"
)
poll = pollution[,fil]
write.csv(poll, file = "pollution_filtered.csv")
heatmap(poll)
heatmap(as.matrix(poll))
fil2 = c("NOx","PM10","PM2.5",
"Pop.aged.0.15","Pop.aged.65.","Pop.density..persons.per.hect",
"Change.pop.2001.2017","Christian","No.religious.belief","Muslim",
"White.ethnic","Black.ethnic","Asian.ethnic","Born.in.EU.Accession",
"Born.non.European","Main.language.Eng","Economically.inactive",
"No.qualifications","Overcrowded.housing","IMD",
"Households.poverty","Net.household.income",
"Youth.unemployment.18.24",
"Children_und_20"
)
poll = pollution[,fil2]
write.csv(poll, file = "pollution_filtered2.csv")
poll = pollution[,fil2]
fil_names = c("NOx","PM10","PM2.5",
"Pop.aged.0.15","Pop.aged.65.","Pop.density..persons.per.hect",
"Change.pop.2001.2017","Christian","No.religious.belief","Muslim",
"White.ethnic","Black.ethnic","Asian.ethnic","Born.in.EU.Accession",
"Born.non.European","Main.language.Eng","Economically.inactive",
"No.qualifications","Overcrowded.housing","IMD",
"Households.poverty","Net.household.income",
"Youth.unemployment.18.24",
"Children_und_20"
)
poll = pollution[,fil]
names(poll) = fil2
write.csv(poll, file = "pollution_filtered2.csv")
names(poll) = fil_names
View(poll)
fil_names = c("NOx","PM10","PM2.5",
"Pop.aged.0.15","Pop.aged.65.","Pop.density",
"Change.pop","Christian","No.rel.belief","Muslim",
"White.ethnic","Black.ethnic","Asian.ethnic","Born.in.EU.Acc",
"Born.non.Euro","Main.lang.Eng","Econ.inactive",
"No.qualifications","Overcrowded","IMD",
"Households.pov","Net.household.inc",
"Youth.unemploy",
"Children_und_20"
)
names(poll) = fil_names
write.csv(poll, file = "pollution_filtered2.csv")
write.csv(poll, file = "pollution_filtered2.csv")
View(pollution)
fil = c("LSOA.Code","NOx","PM10","PM2.5",
"Population.aged.0.15","Population.aged.65.","Population.density..persons.per.hectare.",
"Change.in.population.2001.to.2017","Christian","People.with.no.religious.belief","Muslim",
"White.ethnic.groups","Black.ethnic.groups","Asian.ethnic.groups","Born.in.EU.Accession.countries",
"Born.in.non.European.countries","Main.language.is.English","Economically.inactive",
"People.with.no.qualifications","Overcrowded.housing","Index.of.Multiple.Deprivation..IMD..Score",
"Households.in.poverty","Net.annual.household.income.estimate.after.housing.costs",
"Youth.unemployment..18.24.receiving.JSA.or.Universal.Credit.","Unemployment.benefit..JSA.and.Universal.Credit.",
"Children..dependent.children.aged.under.20..in.families.in.receipt.of.IS.JSA.or.whose.income.is..60..of.median.income"
)
fil_names = c("LSOA.Code","NOx","PM10","PM2.5",
"Pop.aged.0.15","Pop.aged.65.","Pop.density",
"Change.pop","Christian","No.rel.belief","Muslim",
"White.ethnic","Black.ethnic","Asian.ethnic","Born.in.EU.Acc",
"Born.non.Euro","Main.lang.Eng","Econ.inactive",
"No.qualifications","Overcrowded","IMD",
"Households.pov","Net.household.inc",
"Youth.unemploy",
"Children_und_20"
)
poll = pollution[,fil]
names(poll) = fil_names
write.csv(poll, file = "pollution_filtered2.csv")
View(pollution)
View(poll)
write.csv(poll, file = "pollution_filtered2.csv", row.names = FALSE)
write.csv(poll, file = "pollution_filtered2.csv", row.names = FALSE)
class(poll)
sd(poll[,1])
sd(poll[,2])
View(poll)
sd(poll[,2])/median(poll[,2])
test = poll %>%
mutate(index = Households.pov/NOx)
fil = c("LSOA.Code","NOx","PM10","PM2.5",
"Population.aged.0.15","Population.aged.65.","Population.density..persons.per.hectare.",
"Change.in.population.2001.to.2017","Christian","People.with.no.religious.belief","Muslim",
"White.ethnic.groups","Black.ethnic.groups","Asian.ethnic.groups","Born.in.EU.Accession.countries",
"Born.in.non.European.countries","Main.language.is.English","Economically.inactive",
"People.with.no.qualifications","Overcrowded.housing","Index.of.Multiple.Deprivation..IMD..Score",
"Households.in.poverty","Net.annual.household.income.estimate.after.housing.costs",
"Youth.unemployment..18.24.receiving.JSA.or.Universal.Credit.","Unemployment.benefit..JSA.and.Universal.Credit.",
"Children..dependent.children.aged.under.20..in.families.in.receipt.of.IS.JSA.or.whose.income.is..60..of.median.income"
)
fil_names = c("LSOA.Code","NOx","PM10","PM2.5",
"Pop.aged.0.15","Pop.aged.65.","Pop.density",
"Change.pop","Christian","No.rel.belief","Muslim",
"White.ethnic","Black.ethnic","Asian.ethnic","Born.in.EU.Acc",
"Born.non.Euro","Main.lang.Eng","Econ.inactive",
"No.qualifications","Overcrowded","IMD",
"Households.pov","Net.household.inc",
"Youth.unemploy",
"Children_und_20"
)
poll = pollution[,fil]
test = poll %>%
mutate(index = Households.pov/NOx)
test = poll %>%
mutate(index = Households.pov)
names(polll)
names(poll)
names(poll) = fil_names
names(poll)
test = poll %>%
mutate(index = Households.pov)
fil_names = c("LSOA.Code","NOx","PM10","PM2.5",
"Pop.aged.0.15","Pop.aged.65.","Pop.density",
"Change.pop","Christian","No.rel.belief","Muslim",
"White.ethnic","Black.ethnic","Asian.ethnic","Born.in.EU.Acc",
"Born.non.Euro","Main.lang.Eng","Econ.inactive",
"No.qualifications","Overcrowded","IMD",
"Households.pov","Net.household.inc",
"Youth.unemploy","Unemployment.benefit"
"Children_und_20"
)
fil = c("LSOA.Code","NOx","PM10","PM2.5",
"Population.aged.0.15","Population.aged.65.","Population.density..persons.per.hectare.",
"Change.in.population.2001.to.2017","Christian","People.with.no.religious.belief","Muslim",
"White.ethnic.groups","Black.ethnic.groups","Asian.ethnic.groups","Born.in.EU.Accession.countries",
"Born.in.non.European.countries","Main.language.is.English","Economically.inactive",
"People.with.no.qualifications","Overcrowded.housing","Index.of.Multiple.Deprivation..IMD..Score",
"Households.in.poverty","Net.annual.household.income.estimate.after.housing.costs",
"Youth.unemployment..18.24.receiving.JSA.or.Universal.Credit.","Unemployment.benefit..JSA.and.Universal.Credit.",
"Children..dependent.children.aged.under.20..in.families.in.receipt.of.IS.JSA.or.whose.income.is..60..of.median.income"
)
fil_names = c("LSOA.Code","NOx","PM10","PM2.5",
"Pop.aged.0.15","Pop.aged.65.","Pop.density",
"Change.pop","Christian","No.rel.belief","Muslim",
"White.ethnic","Black.ethnic","Asian.ethnic","Born.in.EU.Acc",
"Born.non.Euro","Main.lang.Eng","Econ.inactive",
"No.qualifications","Overcrowded","IMD",
"Households.pov","Net.household.inc",
"Youth.unemploy","Unemployment.benefit",
"Children_und_20"
)
poll = pollution[,fil]
test = poll %>%
mutate(index = Households.pov)
names(poll) = fil_names
names(poll)
test = poll %>%
mutate(index = Households.pov)
poll_ind = poll %>%
select(NOx, Households.pov)
View(poll_ind)
max(poll_ind$NOx)
x = max(poll_ind$NOx) - poll_ind$NOx
x = (max(poll_ind$NOx) - poll_ind$NOx)^2
x = (max(poll_ind$NOx) - poll_ind$NOx)^2 + (max(poll_ind$Households.pov) - poll_ind$Households.pov)^2
x = (max(poll_ind$NOx) - poll_ind$NOx)^2 + (max(poll_ind$Households.pov) - poll_ind$Households.pov)
x = sqrt((max(poll_ind$NOx) - poll_ind$NOx)^2 + (max(poll_ind$Households.pov) - poll_ind$Households.pov)^2)
poll_ind = poll %>%
select(NOx, Households.pov) %>%
mutate(dist = sqrt((max(poll_ind$NOx) - poll_ind$NOx)^2 + (max(poll_ind$Households.pov) - poll_ind$Households.pov)^2))
View(poll_ind)
plot(poll_ind$dist)
poll_ind = poll %>%
select(LSOA.Code, NOx, Households.pov) %>%
mutate(dist = sqrt((max(poll_ind$NOx) - poll_ind$NOx)^2 + (max(poll_ind$Households.pov) - poll_ind$Households.pov)^2))
poll_ind = poll %>%
select(LSOA.Code, NOx, Households.pov) %>%
mutate(dist = scale(sqrt((max(poll_ind$NOx) - poll_ind$NOx)^2 + (max(poll_ind$Households.pov) - poll_ind$Households.pov)^2)))
plot(poll_ind$dist)
poll_ind = poll %>%
select(LSOA.Code, NOx, Households.pov) %>%
mutate(dist = scale(sqrt((max(poll_ind$NOx) - poll_ind$NOx)^2 +
(max(poll_ind$Households.pov) - poll_ind$Households.pov)^2))) %>%
mutate(ind = NOx/Households.pov)
plot(poll_ind$ind)
poll_ind = poll %>%
select(LSOA.Code, NOx, Households.pov) %>%
mutate(sc_nox = scale(NOx), sc_pov = scale(Households.pov))
View(poll_ind)
poll_ind = poll %>%
select(LSOA.Code, NOx, Households.pov) %>%
mutate(sc_nox = scale(NOx), sc_pov = scale(Households.pov)) %>%
mutate(dist = sqrt((max(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(max(poll_ind$sc_pov) - poll_ind$sc_pov)^2))
plot(poll_ind$dist)
plot(y = poll$IMD, x = poll$NOx)
poll_ind = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD))
plot(y = poll_ind$IMD, x = poll_ind$NOx)
plot(y = poll_ind$sc_imd, x = poll_ind$sc_nox)
poll_ind = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD)) %>%
mutate(dist = sqrt((max(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(max(poll_ind$sc_imd) - poll_ind$sc_imd)^2))
plot(y = poll_ind$dist, x = poll_ind$sc_imd)
plot(y = poll_ind$dist, x = poll_ind$sc_nox)
poll_ind = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD)) %>%
mutate(dist = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2))
plot(y = poll_ind$dist, x = poll_ind$sc_nox)
poll_ind = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov, Overcrowded) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD),sc_pov = scale(Householdes.pov), sc_crowd = scale(Overcrowded)) %>%
mutate(dist_imd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2)) %>%
mutate(dist_pov = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_pov) - poll_ind$sc_pov)^2)) %>%
mutate(dist_crowd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_crowd) - poll_ind$sc_crowd)^2))
poll_ind = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov, Overcrowded) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD),sc_pov = scale(Households.pov), sc_crowd = scale(Overcrowded)) %>%
mutate(dist_imd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2)) %>%
mutate(dist_pov = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_pov) - poll_ind$sc_pov)^2)) %>%
mutate(dist_crowd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_crowd) - poll_ind$sc_crowd)^2))
poll_ind = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov, Overcrowded) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD),sc_pov = scale(Households.pov), sc_crowd = scale(Overcrowded)) %>%
mutate(dist_imd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2))
poll_ind = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov, Overcrowded) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD),sc_pov = scale(Households.pov), sc_crowd = scale(Overcrowded)) %>%
mutate(dist_imd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2)) %>%
mutate(dist_pov = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_pov) - poll_ind$sc_pov)^2))
poll_ind = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov, Overcrowded) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD),sc_pov = scale(Households.pov), sc_crowd = scale(Overcrowded)) %>%
mutate(dist_imd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2)) %>%
mutate(dist_pov = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_pov) - poll_ind$sc_pov)^2)) %>%
mutate(dist_crowd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_crowd) - poll_ind$sc_crowd)^2))
pollution_dist = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov, Overcrowded) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD),sc_pov = scale(Households.pov), sc_crowd = scale(Overcrowded)) %>%
mutate(dist_imd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2)) %>%
mutate(dist_pov = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_pov) - poll_ind$sc_pov)^2)) %>%
mutate(dist_crowd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_crowd) - poll_ind$sc_crowd)^2))
write.csv(pollution_dist, file = "pollution_distance.csv", row.names = FALSE)
View(pollution)
names(pollution)
hist(poll_ind$dist_imd)
hist(poll_ind$dist_imd, breaks = 20)
hist(poll_ind$dist_imd, breaks = 30)
summary(poll_ind$dist_imd)
hist(poll_ind$dist_imd, breaks = 50)
wd = 'Desktop/DS_Projects/DK_GST_MAY2019'
wd = 'Desktop/DS_Projects/DK_GST_MAY2019'
path = file.path('Desktop/DS_Projects/DK_GST_MAY2019','data')
path
path
# Set working directory
wd = file.path('Desktop','DS_Projects','DK_GST_MAY2019')
# Set file path to csv file
path = file.path(wd,'data')
path
# Set file path to csv file
path = file.path(wd,'data')
path
# Set file path to csv file
path = file.path(wd,'data','Pollution Health and Sociodemographic data.csv')
path
pollution = read.csv(path)
pollution = read.csv("Desktop/DS_Projects/DK_GST_MAY2019/data/Pollution Health and Sociodemographic data.csv")
setwd(wd)
getwd()
# Set file path to csv file
path = file.path('data','Pollution Health and Sociodemographic data.csv')
pollution = read.csv(path)
# List of interesting variables (URBAN, DIVERSITY, DEPRIVATION)
col_names_filter = c("LSOA.Code","NOx","PM10","PM2.5",
"Population.aged.0.15","Population.aged.65.","Population.density..persons.per.hectare.",
"Change.in.population.2001.to.2017","Christian","People.with.no.religious.belief","Muslim",
"White.ethnic.groups","Black.ethnic.groups","Asian.ethnic.groups","Born.in.EU.Accession.countries",
"Born.in.non.European.countries","Main.language.is.English","Economically.inactive",
"People.with.no.qualifications","Index.of.Multiple.Deprivation..IMD..Score",
"Households.in.poverty","Net.annual.household.income.estimate.after.housing.costs",
"Youth.unemployment..18.24.receiving.JSA.or.Universal.Credit.","Unemployment.benefit..JSA.and.Universal.Credit.",
"Children..dependent.children.aged.under.20..in.families.in.receipt.of.IS.JSA.or.whose.income.is..60..of.median.income"
)
# List of renamed variables
col_names_rename = c("LSOA.Code","NOx","PM10","PM2.5",
"Pop.aged.0.15","Pop.aged.65.","Pop.density",
"Change.pop","Christian","No.rel.belief","Muslim",
"White.ethnic","Black.ethnic","Asian.ethnic","Born.in.EU.Acc",
"Born.non.Euro","Main.lang.Eng","Econ.inactive",
"No.qualifications","IMD",
"Households.pov","Net.household.inc",
"Youth.unemploy","Unemployment.benefit",
"Children_und_20"
)
# Select relevant columns from master pollution
poll = pollution[,fil]
# Assign renamed variable names
names(poll) = fil_names
# Normalise and calculate euclidian distance between NOx and IMD, Household poverty and Overcrowding
pollution_dist = poll %>%
select(LSOA.Code, NOx, IMD, Households.pov, Overcrowded) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD),sc_pov = scale(Households.pov), sc_crowd = scale(Overcrowded)) %>%
mutate(dist_imd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2)) %>%
mutate(dist_pov = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_pov) - poll_ind$sc_pov)^2)) %>%
mutate(dist_crowd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_crowd) - poll_ind$sc_crowd)^2))
# Exploratory plots
plot(y = poll_ind$dist, x = poll_ind$sc_nox)
# Exploratory
hist(poll_ind$dist_imd, breaks = 50)
# Exploratory plots
plot(y = pollution_dist$dist, x = pollution_dist$sc_nox)
# Exploratory
hist(pollution_dist$dist_imd, breaks = 50)
summary(pollution_dist$dist_imd)
View(pollution_dist)
# Exploratory plots
plot(y = pollution_dist$dist_imd, x = pollution_dist$sc_nox)
# Select relevant columns from master pollution
pollution_filtered = pollution[,fil]
# Output relevant dataframes as csv
write.csv(poll, file = "pollution_filtered.csv", row.names = FALSE)
# Output relevant dataframes as csv
write.csv(poll, file = file.path("data","pollution_filtered.csv"), row.names = FALSE)
write.csv(pollution_dist, file = file.path("data","pollution_distance.csv"), row.names = FALSE)
col_names_filter = c("LSOA.Code","NOx","PM10","PM2.5",
"Population.aged.0.15","Population.aged.65.","Population.density..persons.per.hectare.",
"Change.in.population.2001.to.2017","Christian","People.with.no.religious.belief","Muslim",
"White.ethnic.groups","Black.ethnic.groups","Asian.ethnic.groups","Born.in.EU.Accession.countries",
"Born.in.non.European.countries","Main.language.is.English","Economically.inactive",
"People.with.no.qualifications","Index.of.Multiple.Deprivation..IMD..Score",
"Households.in.poverty","Net.annual.household.income.estimate.after.housing.costs",
"Youth.unemployment..18.24.receiving.JSA.or.Universal.Credit.","Unemployment.benefit..JSA.and.Universal.Credit.",
"Children..dependent.children.aged.under.20..in.families.in.receipt.of.IS.JSA.or.whose.income.is..60..of.median.income"
)
# Select relevant columns from master pollution
pollution_filtered = pollution[,col_names_filter]
# Assign renamed variable names
names(pollution_filtered) = col_names_rename
pollution_dist = pollution_filtered  %>%
select(LSOA.Code, NOx, IMD, Households.pov, Overcrowded) %>%
mutate(sc_nox = scale(NOx), sc_imd = scale(IMD),sc_pov = scale(Households.pov), sc_crowd = scale(Overcrowded)) %>%
mutate(dist_imd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_imd) - poll_ind$sc_imd)^2)) %>%
mutate(dist_pov = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_pov) - poll_ind$sc_pov)^2)) %>%
mutate(dist_crowd = sqrt((min(poll_ind$sc_nox) - poll_ind$sc_nox)^2 +
(min(poll_ind$sc_crowd) - poll_ind$sc_crowd)^2))
# Output relevant dataframes as csv
write.csv(poll, file = file.path("data","pollution_filtered.csv"), row.names = FALSE)
write.csv(pollution_dist, file = file.path("data","pollution_distance.csv"), row.names = FALSE)
View(pollution_filtered)
# Output relevant dataframes as csv
write.csv(pollution_filtered, file = file.path("data","pollution_filtered.csv"), row.names = FALSE)
# Set data subfolder name !! INPUT REQUIRED !!
subfolder = 'data'
# Set file name !! INPUT REQUIRED !!
file_name = 'Pollution Health and Sociodemographic data.csv'
# Set working directory !! INPUT REQUIRED !!
wd = file.path('Desktop','DS_Projects','DK_GST_MAY2019')
# Set file path to csv file
path = file.path(subfolder,file_name)
path
# Load file
pollution = read.csv(path)
